services:
  mcuwidgets:
    container_name: mcuwidgetscms
    pull_policy: build
    build:
      context: ../
      dockerfile: ./Dockerfile
    environment:
      MYSQL_HOST: mcuwidgetsDB
      MYSQL_DB: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PWD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      NODE_ENV: ${NODE_ENV}
      APP_KEYS: ${APP_KEYS}
      BASE_URL: ${BASE_URL}
      TMDB_API_KEY: ${TMDB_API_KEY}
      RAPID_API_KEY: ${RAPID_API_KEY}
      NYT_TOKEN: ${NYT_TOKEN}
    ports:
      - "1337:1337"
      - "1338:8000"
    volumes:
      - mcuwidgets-cms-data:/opt/app/public/uploads
      - type: bind
        source: ../src
        target: /opt/app/src
      - type: bind
        source: ../config
        target: /opt/app/config
    depends_on:
      mcuwidgetsDB:
        condition: service_healthy
      messageQueue:
        condition: service_started

  mcuwidgetsDB:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - mcuwidgets-data:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "--password=${DATABASE_PASSWORD}",
        ]
      timeout: 20s
      retries: 10
